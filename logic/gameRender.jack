class gameRender {
    field Nave nave;
    field Asteroid asteroide;
    field Disparo disparo;
    field boolean is_shooting;
    field int direccion;
    field int coordX;
    field int coordY;
    field int tempX;
    field int tempY;
    field int colision;

    constructor gameRender new() {
        let nave = Nave.new(10, 50, 30);
        let asteroide = Asteroid.new(10, 10, 30);
        let direccion = 0;
        let is_shooting = false;
        return this;
    }

    method void run() {
        var char tecla;
        var boolean exit;
        let exit = false;

        while (~exit) {
            let tecla = Keyboard.keyPressed();
            if (~(tecla = 0)) {
                if (tecla = 32) {  // Space -> Shoot
                    let is_shooting = true;
                    let coordY = nave.getY();
                    let disparo = Disparo.new(10, coordY, direccion);
                }
                if (tecla = 81) {  // letter Q -> QUIT
                    let exit = true;
                }
                if (tecla = 131) {  // arrow up
                    let direccion = 1;
                }
                if (tecla = 133) {  // arrow down
                    let direccion = 2;
                }
                if (tecla = 130) {  // arrow left
                    let direccion = 3;
                }
                if (tecla = 132) {  // arrow right
                    let direccion = 4;
                }
            } else {
                let direccion = 0;  // Stop moving if no key is pressed
            }

            do nave.moverNave(direccion);
            do asteroide.moveAsteroide();

            if (is_shooting) {
                do disparo.move();
                do Sys.wait(5);
            }

            /* Handle collision detection if necessary */
        }
        return;
    }

    method void dispose() {
        do nave.dispose();
        do asteroide.dispose();
        if (is_shooting) {
            do disparo.dispose();
        }
        do Memory.deAlloc(this);
        return;
    }
}
