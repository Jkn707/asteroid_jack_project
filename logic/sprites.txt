Colocar los sprites ac√°

//Nave derecha

function void draw(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 224);
	do Memory.poke(memAddress +32, 96);
	do Memory.poke(memAddress +64, 224);
	do Memory.poke(memAddress +96, 480);
	do Memory.poke(memAddress +128, 32760);
	do Memory.poke(memAddress +160, -4);
	do Memory.poke(memAddress +192, -4);
	do Memory.poke(memAddress +224, -4);
	do Memory.poke(memAddress +256, 32760);
	do Memory.poke(memAddress +288, 480);
	do Memory.poke(memAddress +320, 224);
	do Memory.poke(memAddress +352, 96);
	do Memory.poke(memAddress +384, 224);
	// column 1
	do Memory.poke(memAddress +193, 1);
	return;
}


//Nave izquierda

function void draw(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 14336);
	do Memory.poke(memAddress +32, 12288);
	do Memory.poke(memAddress +64, 14336);
	do Memory.poke(memAddress +96, 15360);
	do Memory.poke(memAddress +128, -16);
	do Memory.poke(memAddress +160, -8);
	do Memory.poke(memAddress +192, -4);
	do Memory.poke(memAddress +224, -8);
	do Memory.poke(memAddress +256, -16);
	do Memory.poke(memAddress +288, 15360);
	do Memory.poke(memAddress +320, 14336);
	do Memory.poke(memAddress +352, 12288);
	do Memory.poke(memAddress +384, 14336);
	// column 1
	do Memory.poke(memAddress +161, 1);
	do Memory.poke(memAddress +193, 1);
	do Memory.poke(memAddress +225, 1);
	return;
}


//asteoride Holed
function void FittedAsteroidHoled(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress +224, 31);
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +256, 127);
	do Memory.poke(memAddress +288, 511);
	do Memory.poke(memAddress +320, 463);
	do Memory.poke(memAddress +352, 463);
	do Memory.poke(memAddress +384, 511);
	do Memory.poke(memAddress +416, 123);
	do Memory.poke(memAddress +448, 127);
	do Memory.poke(memAddress +480, 255);
	do Memory.poke(memAddress +512, 231);
	do Memory.poke(memAddress +544, 231);
	do Memory.poke(memAddress +576, 127);
	do Memory.poke(memAddress +608, 127);
	do Memory.poke(memAddress +640, 31);
	// column 1
	// column -1
	do Memory.poke(memAddress +223, -4096);
	do Memory.poke(memAddress -1, 0);
	do Memory.poke(memAddress +31, 0);
	do Memory.poke(memAddress +63, 0);
	do Memory.poke(memAddress +95, 0);
	do Memory.poke(memAddress +127, 0);
	do Memory.poke(memAddress +159, 0);
	do Memory.poke(memAddress +191, 0);
	do Memory.poke(memAddress +255, -1024);
	do Memory.poke(memAddress +287, -9216);
	do Memory.poke(memAddress +319, -4096);
	do Memory.poke(memAddress +351, -1024);
	do Memory.poke(memAddress +383, -256);
	do Memory.poke(memAddress +415, -24832);
	do Memory.poke(memAddress +447, -24832);
	do Memory.poke(memAddress +479, -512);
	do Memory.poke(memAddress +511, -512);
	do Memory.poke(memAddress +543, -2048);
	do Memory.poke(memAddress +575, -20480);
	do Memory.poke(memAddress +607, -4096);
	do Memory.poke(memAddress +639, -16384);
	return;
}